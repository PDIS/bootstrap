$brand: #2c5ab4;
$brand-strong: #03429c;
$on-brand: #ffffff;
$brand-flat: #d8e2ff;
$brand-flat-strong: #afc6ff;
$on-brand-flat: #001847;

$accent: #705d00;
$accent-strong: #554600;
$on-accent: #ffffff;
$accent-flat: #ffe25b;
$accent-flat-strong: #e7c400;
$on-accent-flat: #221b00;

$positive: #286b2a;
$positive-strong: #085314;
$on-positive: #ffffff;
$positive-flat: #acf5a3;
$positive-flat-strong: #90d889;
$on-positive-flat: #012104;

$negative: #ba1b1b;
$negative-strong: #930006;
$on-negative: #ffffff;
$negative-flat: #ffdad4;
$negative-flat-strong: #ffb4a9;
$on-negative-flat: #410001;

$information: #006687;
$information-strong: #004d67;
$on-information: #ffffff;
$information-flat: #bee8ff;
$information-flat-strong: #6bd2ff;
$on-information-flat: #001e2b;

$warning: #a53d00;
$warning-strong: #7d2c00;
$on-warning: #ffffff;
$warning-flat: #ffdbcb;
$warning-flat-strong: #ffb593;
$on-warning-flat: #360f00;

$background: #FAFDF9;
$on-background: #191C1B;

$surface: #FAFDF9;
$surface-1: #F0F5F6;
$surface-2: #EAF0F3;
$surface-3: #E3EBF1;
$surface-4: #E1E9F1;
$surface-5: #DDE6EF;
$on-surface: #191C1B;

$surface-variant:#E2E2EC;
$on-surface-variant:#44464E;
$outline: #757780;

$surfaces: 
'surface' $surface, 
'surface-1' $surface-1, 
'surface-2' $surface-2, 
'surface-3' $surface-3, 
'surface-4' $surface-4, 
'surface-5' $surface-5, 
'on-surface' $on-surface, 
'surface-variant' $surface-variant,
'on-surface-variant' $on-surface-variant,
'outline' $outline;

$white: #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black: #000 !default;

$colors: (
  "brand": (
    "base": (
      "normal": $brand,
      "strong": $brand-strong,
      "on": $on-brand,
    ),
    "flat": (
      "normal": $brand-flat,
      "strong": $brand-flat-strong,
      "on": $on-brand-flat,
    ),
  ),
  "accent": (
    "base": (
      "normal": $accent,
      "strong": $accent-strong,
      "on": $on-accent,
    ),
    "flat": (
      "normal": $accent-flat,
      "strong": $accent-flat-strong,
      "on": $on-accent-flat,
    ),
  ),
  "positive": (
    "base": (
      "normal": $positive,
      "strong": $positive-strong,
      "on": $on-positive,
    ),
    "flat": (
      "normal": $positive-flat,
      "strong": $positive-flat-strong,
      "on": $on-positive-flat,
    ),
  ),
  "negative": (
    "base": (
      "normal": $negative,
      "strong": $negative-strong,
      "on": $on-negative,
    ),
    "flat": (
      "normal": $negative-flat,
      "strong": $negative-flat-strong,
      "on": $on-negative-flat,
    ),
  ),
  "information": (
    "base": (
      "normal": $information,
      "strong": $information-strong,
      "on": $on-information,
    ),
    "flat": (
      "normal": $information-flat,
      "strong": $information-flat-strong,
      "on": $on-information-flat,
    ),
  ),
  "warning": (
    "base": (
      "normal": $warning,
      "strong": $warning-strong,
      "on": $on-warning,
    ),
    "flat": (
      "normal": $warning-flat,
      "strong": $warning-flat-strong,
      "on": $on-warning-flat,
    ),
  ),
);

$color-envs: (
  "brand": "brand",
  "accent": "accent",
  "positive": "positive",
  "negative": "negative",
  "information": "information",
  "warning": "warning",
  "primary": "brand",
  "secondary": "accent",
  "success": "positive",
  "danger": "negative",
  "info": "information",
);

//escape svg function from bootstrap

$escaped-characters: (
  ("<", "%3c"),
  (">", "%3e"),
  ("#", "%23"),
  ("(", "%28"),
  (")", "%29")
) !default;

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

// will be deleted

$accordion-icon-color: $brand;
$accordion-icon-active-color: $on-brand;

$sidebar-icon-color: black;
$sidebar-icon-active-color: #0969a2;
$sidebar-icon-hover-color: white;

$link-color: $brand;